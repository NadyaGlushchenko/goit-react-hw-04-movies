{"version":3,"sources":["views/Cast/Cast.js","views/Cast/Cast.module.css"],"names":["Cast","movieId","useParams","slug","match","useState","authors","setAuthors","error","setError","Status","IDLE","status","setStatus","useEffect","apiService","then","cast","length","toast","RESOLVED","catch","console","log","REJECTED","PENDING","LoaderComponent","ErrorView","message","className","s","map","author","item","src","profile_path","noImageFound","alt","original_name","photo","name","character","id","module","exports"],"mappings":"2RAiEeA,MAvDf,WAAiB,IAETC,EADWC,cAATC,KACaC,MAAM,cAAc,GAF3B,EAGgBC,mBAAS,MAHzB,mBAGPC,EAHO,KAGEC,EAHF,OAIYF,mBAAS,MAJrB,mBAIPG,EAJO,KAIAC,EAJA,OAKcJ,mBAASK,IAAOC,MAL9B,mBAKPC,EALO,KAKCC,EALD,KA0Bd,OAnBAC,qBAAU,WACRC,IACmBd,GAChBe,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,GAAoB,IAAhBA,EAAKC,OAGP,OAFAC,IAAMX,MAAM,iCACZK,EAAUH,IAAOC,MAGnBJ,EAAWU,GACXJ,EAAUH,IAAOU,aAElBC,OAAM,SAAAb,GACLc,QAAQC,IAAIf,GACZC,EAAS,oCACTI,EAAUH,IAAOc,eAEpB,CAACvB,IAGF,qCACGW,IAAWF,IAAOe,SAAW,cAACC,EAAA,EAAD,IAE7Bd,IAAWF,IAAOc,UAAY,cAACG,EAAA,EAAD,CAAWC,QAASpB,IAElDI,IAAWF,IAAOU,UACjB,oBAAIS,UAAWC,IAAEb,KAAjB,SACGX,EAAQyB,KAAI,SAAAC,GAAM,OACjB,qBAAoBH,UAAWC,IAAEG,KAAjC,UACE,qBACEC,IACEF,EAAOG,aAAP,0CACuCH,EAAOG,cAC1CC,IAENC,IAAKL,EAAOM,cACZT,UAAWC,IAAES,QAEf,oBAAIV,UAAWC,IAAEU,KAAjB,SAAwBR,EAAOM,gBAC/B,mBAAGT,UAAWC,IAAEW,UAAhB,SAA4BT,EAAOS,cAX5BT,EAAOU,c,mBC5C5BC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,oBAAoB,KAAO,mBAAmB,UAAY","file":"static/js/cast-subview.b8a592d0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as apiService from '../../services/apiService';\nimport Status from '../../services/status';\nimport LoaderComponent from '../../components/LoaderComponent';\nimport ErrorView from '../../components/ErrorView';\nimport noImageFound from '../../img/no-image.jpg';\nimport s from './Cast.module.css';\n\nfunction Cast() {\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-z0-9]+$/)[0];\n  const [authors, setAuthors] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    apiService\n      .getMovieCredits(movieId)\n      .then(({ cast }) => {\n        if (cast.length === 0) {\n          toast.error('ðŸ’© No results!');\n          setStatus(Status.IDLE);\n          return;\n        }\n        setAuthors(cast);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        console.log(error);\n        setError('Something went wrong. Try again.');\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {status === Status.PENDING && <LoaderComponent />}\n\n      {status === Status.REJECTED && <ErrorView message={error} />}\n\n      {status === Status.RESOLVED && (\n        <ul className={s.cast}>\n          {authors.map(author => (\n            <li key={author.id} className={s.item}>\n              <img\n                src={\n                  author.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${author.profile_path}`\n                    : noImageFound\n                }\n                alt={author.original_name}\n                className={s.photo}\n              />\n              <h4 className={s.name}>{author.original_name}</h4>\n              <p className={s.character}>{author.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cast\":\"Cast_cast__3uXX5\",\"item\":\"Cast_item__2AMk9\",\"photo\":\"Cast_photo__22NK1\",\"name\":\"Cast_name__1evyI\",\"character\":\"Cast_character__3YmVx\"};"],"sourceRoot":""}